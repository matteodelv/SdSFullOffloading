[General]
network = FullOffloadingNetwork
description = "Full offloading network with different reneging rates and deadline policies"


# Source shared parameters
*.source.interArrivalTime = exponential(120s)

# WiFiQueue shared parameters
*.wifiQueue.serviceTime = exponential(40s)
*.wifiQueue.wifiStateDistribution = exponential(3120s)
*.wifiQueue.cellularStateDistribution = exponential(1524s)
*.wifiQueue.policyType = ${policy=1, 2}
#*.wifiQueue.deadlineDistribution = exponential(${renegingTime=10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180}min)
*.wifiQueue.deadlineDistribution = exponential(${renegingTime=1200, 1980, 2400, 3000, 4500, 6000}s)

# CellularQueue shared parameters
*.cellularQueue.serviceTime = exponential(400s)

# RemoteQueue shared parameters
*.remoteQueue.serviceTime = exponential(1s)

*.sink.totalServiceTime.result-recording-modes = vector
*.sink.queuesVisited.result-recording-modes = vector
*.sink.totalQueueingTime.result-recording-modes = -
*.sink.lifeTime.result-recording-modes = -

*.wifiQueue.queueLength.result-recording-modes = -
*.wifiQueue.wifiActiveTime.result-recording-modes = vector
*.wifiQueue.responseTime.result-recording-modes = vector

*.cellularQueue.queueLength.result-recording-modes = -
*.cellularQueue.responseTime.result-recording-modes = vector

*.remoteQueue.queueLength.result-recording-modes = -
*.remoteQueue.responseTime.result-recording-modes = vector


[Config SetupAnalysis]
sim-time-limit = 500000s
seed-set = ${seed=11, 30, 96}


[Config BatchExecution]
sim-time-limit = 4000000s
warmup-period = 300000s
seed-set = ${seed=15, 45, 75}

#**.numJobs = 30000


